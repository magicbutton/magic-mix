package nexiintra_home

// Generated by pnp2go - do not edit
import (
	"time"

	"github.com/magicbutton/magic-mix/shared"
)

type SP_Brand_identity struct {
	Title string `"json:Title"`
}

var SP_Brand_identity_Fields = []string{}
var SP_Brand_identity_Dependencies = []string{}

type Brand_identity struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_Companies struct {
	Title    string `"json:Title"`
	Field_1  string `"json:field_1"`
	Field_2  string `"json:field_2"`
	Field_3  string `"json:field_3"`
	Field_4  string `"json:field_4"`
	Field_5  string `"json:field_5"`
	Field_6  string `"json:field_6"`
	Field_8  string `"json:field_8"`
	Field_10 string `"json:field_10"`
	Field_11 string `"json:field_11"`
	Field_12 string `"json:field_12"`
	Field_13 string `"json:field_13"`
	Field_14 string `"json:field_14"`
}

var SP_Companies_Fields = []string{"field_1", "field_2", "field_3", "field_4", "field_5", "field_6", "field_8", "field_10", "field_11", "field_12", "field_13", "field_14"}
var SP_Companies_Dependencies = []string{}

type Companies struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
	field_1  string    `"json:field_1"`
	field_2  string    `"json:field_2"`
	field_3  string    `"json:field_3"`
	field_4  string    `"json:field_4"`
	field_5  string    `"json:field_5"`
	field_6  string    `"json:field_6"`
	field_8  string    `"json:field_8"`
	field_10 string    `"json:field_10"`
	field_11 float64   `"json:field_11"`
	field_12 string    `"json:field_12"`
	field_13 string    `"json:field_13"`
	field_14 string    `"json:field_14"`
}
type SP_CopyOfSharedDocuments struct {
	Title                            string `"json:Title"`
	Lcf76f155ced4ddcb4097134ff3c332f string `"json:lcf76f155ced4ddcb4097134ff3c332f"`
	Mediaserviceocr                  string `"json:MediaServiceOCR"`
	Mediaservicelocation             string `"json:MediaServiceLocation"`
	Sharedwithdetails                string `"json:SharedWithDetails"`
}

var SP_CopyOfSharedDocuments_Fields = []string{"lcf76f155ced4ddcb4097134ff3c332f", "MediaServiceOCR", "MediaServiceLocation", "SharedWithDetails"}
var SP_CopyOfSharedDocuments_Dependencies = []string{}

type CopyOfSharedDocuments struct {
	Title                            string    `"json:Title"`
	Created                          time.Time `"json:Created"`
	Editorid                         int       `"json:EditorId"`
	Guid                             string    `"json:GUID"`
	Id                               int       `"json:ID"`
	Modified                         time.Time `"json:Modified"`
	Authorid                         int       `"json:AuthorId"`
	lcf76f155ced4ddcb4097134ff3c332f float64   `"json:lcf76f155ced4ddcb4097134ff3c332f"`
	MediaServiceOCR                  float64   `"json:MediaServiceOCR"`
	MediaServiceLocation             string    `"json:MediaServiceLocation"`
	SharedWithDetails                float64   `"json:SharedWithDetails"`
}
type SP_Countries struct {
	Title     string  `"json:Title"`
	Code      string  `"json:Code"`
	Sortorder float64 `"json:SortOrder"`
	Region    string  `"json:Region"`
}

var SP_Countries_Fields = []string{"Code", "SortOrder", "Region"}
var SP_Countries_Dependencies = []string{}

type Countries struct {
	Title     string    `"json:Title"`
	Created   time.Time `"json:Created"`
	Editorid  int       `"json:EditorId"`
	Guid      string    `"json:GUID"`
	Id        int       `"json:ID"`
	Modified  time.Time `"json:Modified"`
	Authorid  int       `"json:AuthorId"`
	Code      string    `"json:Code"`
	SortOrder string    `"json:SortOrder"`
}
type SP_Documents struct {
	Title string `"json:Title"`
}

var SP_Documents_Fields = []string{}
var SP_Documents_Dependencies = []string{}

type Documents struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_Events struct {
	Title          string `"json:Title"`
	Bannerimageurl string `"json:BannerImageUrl"`
}

var SP_Events_Fields = []string{"BannerImageUrl"}
var SP_Events_Dependencies = []string{}

type Events struct {
	Title          string    `"json:Title"`
	Created        time.Time `"json:Created"`
	Editorid       int       `"json:EditorId"`
	Guid           string    `"json:GUID"`
	Id             int       `"json:ID"`
	Modified       time.Time `"json:Modified"`
	Authorid       int       `"json:AuthorId"`
	BannerImageUrl float64   `"json:BannerImageUrl"`
}
type SP_FormTemplates struct {
	Title string `"json:Title"`
}

var SP_FormTemplates_Fields = []string{}
var SP_FormTemplates_Dependencies = []string{}

type FormTemplates struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_GroupRegulatorySystem struct {
	Title                          string    `"json:Title"`
	Documentcode                   string    `"json:DocumentCode"`
	Approvaldate                   time.Time `"json:ApprovalDate"`
	Shownewlabeluntil              time.Time `"json:ShowNewLabeluntil"`
	Showupdatelabeluntil           time.Time `"json:ShowUpdateLabelUntil"`
	Effectivedate                  time.Time `"json:EffectiveDate"`
	Documentversion                string    `"json:DocumentVersion"`
	Documenttitle                  string    `"json:DocumentTitle"`
	Process                        string    `"json:Process"`
	Contactperson                  string    `"json:ContactPerson"`
	Notescurrentdocument           string    `"json:NotesCurrentDocument"`
	Crossreferenceotherregulations string    `"json:CrossReferenceOtherRegulations"`
	Processowner                   string    `"json:ProcessOwner"`
}

var SP_GroupRegulatorySystem_Fields = []string{"DocumentCode", "ApprovalDate", "ShowNewLabeluntil", "ShowUpdateLabelUntil", "EffectiveDate", "DocumentVersion", "DocumentTitle", "Process", "ContactPerson", "NotesCurrentDocument", "CrossReferenceOtherRegulations", "ProcessOwner"}
var SP_GroupRegulatorySystem_Dependencies = []string{}

type GroupRegulatorySystem struct {
	Title                          string    `"json:Title"`
	Created                        time.Time `"json:Created"`
	Editorid                       int       `"json:EditorId"`
	Guid                           string    `"json:GUID"`
	Id                             int       `"json:ID"`
	Modified                       time.Time `"json:Modified"`
	Authorid                       int       `"json:AuthorId"`
	DocumentCode                   string    `"json:DocumentCode"`
	ApprovalDate                   time.Time `"json:ApprovalDate"`
	ShowNewLabeluntil              time.Time `"json:ShowNewLabeluntil"`
	ShowUpdateLabelUntil           time.Time `"json:ShowUpdateLabelUntil"`
	EffectiveDate                  time.Time `"json:EffectiveDate"`
	DocumentVersion                string    `"json:DocumentVersion"`
	DocumentTitle                  string    `"json:DocumentTitle"`
	Process                        string    `"json:Process"`
	ContactPerson                  string    `"json:ContactPerson"`
	NotesCurrentDocument           string    `"json:NotesCurrentDocument"`
	CrossReferenceOtherRegulations string    `"json:CrossReferenceOtherRegulations"`
	ProcessOwner                   string    `"json:ProcessOwner"`
}
type SP_Links struct {
	Title       string `"json:Title"`
	Description string `"json:Description"`
	Slug        string `"json:Slug"`
	Url         string `"json:URL"`
	Image       string `"json:Image"`
	Link        string `"json:Link"`
}

var SP_Links_Fields = []string{"Description", "Slug", "URL", "Image", "Link"}
var SP_Links_Dependencies = []string{}

type Links struct {
	Title       string    `"json:Title"`
	Created     time.Time `"json:Created"`
	Editorid    int       `"json:EditorId"`
	Guid        string    `"json:GUID"`
	Id          int       `"json:ID"`
	Modified    time.Time `"json:Modified"`
	Authorid    int       `"json:AuthorId"`
	Description float64   `"json:Description"`
	Slug        string    `"json:Slug"`
	URL         string    `"json:URL"`
	Image       float64   `"json:Image"`
}
type SP_NewsCategories struct {
	Title     string  `"json:Title"`
	Sortorder float64 `"json:SortOrder"`
}

var SP_NewsCategories_Fields = []string{"SortOrder"}
var SP_NewsCategories_Dependencies = []string{}

type NewsCategories struct {
	Title     string    `"json:Title"`
	Created   time.Time `"json:Created"`
	Editorid  int       `"json:EditorId"`
	Guid      string    `"json:GUID"`
	Id        int       `"json:ID"`
	Modified  time.Time `"json:Modified"`
	Authorid  int       `"json:AuthorId"`
	SortOrder string    `"json:SortOrder"`
}
type SP_NewsChannels struct {
	Title             string                   `"json:Title"`
	Relevantunits     []shared.LookupReference `"json:RelevantUnits"`
	Mandatory         bool                     `"json:Mandatory"`
	Relevantcountires []shared.LookupReference `"json:RelevantCountires"`
	Region            []shared.LookupReference `"json:Region"`
	Newscategory      []shared.LookupReference `"json:NewsCategory"`
	Tag               string                   `"json:Tag"`
}

var SP_NewsChannels_Fields = []string{"RelevantUnits", "Mandatory", "RelevantCountires", "Region", "NewsCategory", "Tag"}
var SP_NewsChannels_Dependencies = []string{"Units", "Countries", "Regions", "News Categories"}

type NewsChannels struct {
	Title             string         `"json:Title"`
	RelevantUnits     []Units        `"json:RelevantUnits"`
	Mandatory         bool           `"json:Mandatory"`
	RelevantCountires []Countries    `"json:RelevantCountires"`
	Region            []Regions      `"json:Region"`
	NewsCategory      NewsCategories `"json:NewsCategory"`
	Tag               string         `"json:Tag"`
}
type SP_Regions struct {
	Title string `"json:Title"`
}

var SP_Regions_Fields = []string{}
var SP_Regions_Dependencies = []string{}

type Regions struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_SiteAssets struct {
	Title                            string `"json:Title"`
	Lcf76f155ced4ddcb4097134ff3c332f string `"json:lcf76f155ced4ddcb4097134ff3c332f"`
	Mediaserviceocr                  string `"json:MediaServiceOCR"`
}

var SP_SiteAssets_Fields = []string{"lcf76f155ced4ddcb4097134ff3c332f", "MediaServiceOCR"}
var SP_SiteAssets_Dependencies = []string{}

type SiteAssets struct {
	Title                            string    `"json:Title"`
	Created                          time.Time `"json:Created"`
	Editorid                         int       `"json:EditorId"`
	Guid                             string    `"json:GUID"`
	Id                               int       `"json:ID"`
	Modified                         time.Time `"json:Modified"`
	Authorid                         int       `"json:AuthorId"`
	lcf76f155ced4ddcb4097134ff3c332f float64   `"json:lcf76f155ced4ddcb4097134ff3c332f"`
	MediaServiceOCR                  float64   `"json:MediaServiceOCR"`
}
type SP_SitePages struct {
	Title string `"json:Title"`
}

var SP_SitePages_Fields = []string{}
var SP_SitePages_Dependencies = []string{}

type SitePages struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_StyleLibrary struct {
	Title string `"json:Title"`
}

var SP_StyleLibrary_Fields = []string{}
var SP_StyleLibrary_Dependencies = []string{}

type StyleLibrary struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_Test_copy_paste_mele struct {
	Title  string `"json:Title"`
	Gggggg string `"json:gggggg"`
}

var SP_Test_copy_paste_mele_Fields = []string{"gggggg"}
var SP_Test_copy_paste_mele_Dependencies = []string{}

type Test_copy_paste_mele struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
	gggggg   string    `"json:gggggg"`
}
type SP_Test_import struct {
	Title string `"json:Title"`
}

var SP_Test_import_Fields = []string{}
var SP_Test_import_Dependencies = []string{}

type Test_import struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
type SP_Units struct {
	Title     string  `"json:Title"`
	Code      string  `"json:code"`
	Sortorder float64 `"json:SortOrder"`
	Unittype  string  `"json:UnitType"`
}

var SP_Units_Fields = []string{"code", "SortOrder", "UnitType"}
var SP_Units_Dependencies = []string{}

type Units struct {
	Title     string    `"json:Title"`
	Created   time.Time `"json:Created"`
	Editorid  int       `"json:EditorId"`
	Guid      string    `"json:GUID"`
	Id        int       `"json:ID"`
	Modified  time.Time `"json:Modified"`
	Authorid  int       `"json:AuthorId"`
	code      string    `"json:code"`
	SortOrder string    `"json:SortOrder"`
}
type SP_Video struct {
	Title string `"json:Title"`
}

var SP_Video_Fields = []string{}
var SP_Video_Dependencies = []string{}

type Video struct {
	Title    string    `"json:Title"`
	Created  time.Time `"json:Created"`
	Editorid int       `"json:EditorId"`
	Guid     string    `"json:GUID"`
	Id       int       `"json:ID"`
	Modified time.Time `"json:Modified"`
	Authorid int       `"json:AuthorId"`
}
